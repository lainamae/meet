{"version":3,"sources":["Event.js","EventList.js","CitySearch.js","NumberOfEvents.js","mock-data.js","api.js","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["Event","state","collapsed","handleClick","setState","event","this","props","className","summary","start","dateTime","timeZone","location","Button","variant","onClick","href","htmlLink","rel","target","description","Component","EventList","events","map","Col","md","id","CitySearch","query","suggestions","showSuggestions","undefined","handleInputChanged","value","locations","filter","toUpperCase","indexOf","handleItemClicked","suggestion","updateEvents","type","onChange","onFocus","style","display","NumberOfEvents","numberOfEvents","handleNumberInputChanged","mockData","getAccessToken","a","accessToken","localStorage","getItem","checkToken","tokenCheck","error","removeItem","searchParams","URLSearchParams","window","search","get","code","axios","results","authUrl","data","getToken","encodeCode","encodeURIComponent","fetch","then","res","json","catch","access_token","setItem","extractLocations","Set","result","getEvents","NProgress","startsWith","done","token","removeQuery","history","pushState","pathname","newurl","protocol","host","url","JSON","stringify","App","locationEvents","mounted","Container","Row","Boolean","hostname","match","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console","message"],"mappings":"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","file":"static/js/main.d73bdd2f.chunk.js","sourcesContent":["// src/Event.js\n\nimport React, { Component } from \"react\";\nimport { Button} from 'react-bootstrap';\n\nclass Event extends Component {\n  state = {\n    collapsed: true,\n  };\n\n  handleClick = () => {\n    this.setState({\n      collapsed: !this.state.collapsed,\n    });\n  };\n\n  render() {\n    const { event } = this.props;\n    const { collapsed } = this.state;\n    return  <div className=\"event\">\n              <h2 className=\"summary\">{event.summary}</h2>\n              <p className=\"start-date\">\n              {event.start.dateTime} ({event.start.timeZone})\n              </p>\n              <p className=\"location\">\n                {event.location}\n              </p>\n              <Button variant=\"primary\" className=\"show-more\" onClick={this.handleClick}>\n                    Toggle details\n              </Button>\n                <div className={`more-info ${collapsed ? `hidden` : `show`}`}>\n                  <h3>About the event:</h3>\n                  <a href={event.htmlLink} rel=\"noreferrer\" target=\"_blank\">\n                    See details on Google Calendar\n                  </a>\n                  <p className=\"event-description\">{event.description}</p>\n                </div>\n            </div>\n  }\n}\nexport default Event;","// src/EventList.js\n\nimport React, { Component } from 'react';\nimport Event from './Event';\nimport {Col} from 'react-bootstrap'\n\nclass EventList extends Component {\n  render() {\n    const { events } = this.props;\n    return (\n      <ul className=\"EventList d-flex flex-row\">\n {events.map(event =>\n        <Col md={4} key={event.id}>\n        <li>\n          <Event event={event} />\n        </li>\n        </Col>\n      )}\n      </ul>\n    );\n  }\n}\n\nexport default EventList;","// src/CitySearch.js\n\nimport React, { Component } from 'react';\n\n\nclass CitySearch extends Component {\n  state = {\n    query: '',\n    suggestions: [],\n    showSuggestions: undefined\n  }\n  handleInputChanged = (event) => {\n    const value = event.target.value;\n    const suggestions = this.props.locations.filter((location) => {\n      return location.toUpperCase().indexOf(value.toUpperCase()) > -1;\n    });\n    this.setState({\n      query: value,\n      suggestions,\n    });\n  };\n  handleItemClicked = (suggestion) => {\n    this.setState({\n      query: suggestion,\n      showSuggestions: false\n    });\n    this.props.updateEvents(suggestion);\n  }\n  render() {\n    return (\n      <div className=\"CitySearch\">\n        <input\n        type=\"text\"\n        className=\"city\"\n        value={this.state.query}\n        onChange={this.handleInputChanged}\n        onFocus={() => { this.setState({ showSuggestions: true }) }}\n      />\n      <ul className=\"suggestions\" style={this.state.showSuggestions ? {}: { display: 'none' }}>\n  {this.state.suggestions.map((suggestion) => (\n    <li\n      key={suggestion}\n      onClick={() => this.handleItemClicked(suggestion)}\n    >{suggestion}</li>\n  ))}\n  <li onClick={() => this.handleItemClicked(\"all\")}>\n    <b>See all cities</b>\n  </li>\n</ul>\n      </div>\n    );\n  }\n}\n\nexport default CitySearch;","import React, {Component} from 'react';\n\nclass NumberOfEvents extends Component {\n  state = {\n    numberOfEvents: 32\n  }\n  handleNumberInputChanged = (event) => {\n    const value = event.target.value;\n    this.setState({\n      numberOfEvents: value,\n    });\n  };\n  render() {\n    return (\n      <div className=\"numberOfEvents\">\n        <input\n        type=\"text\"\n        className=\"number-events-input\"\n        value={this.state.numberOfEvents}\n        onChange={this.handleNumberInputChanged}\n        />\n      </div>\n    );\n  }\n}\n\nexport default NumberOfEvents;","let mockData = [\n  {\n    \"kind\": \"calendar#event\",\n    \"etag\": \"\\\"3181161784712000\\\"\",\n    \"id\": \"4eahs9ghkhrvkld72hogu9ph3e_20200519T140000Z\",\n    \"status\": \"confirmed\",\n    \"htmlLink\": \"https://www.google.com/calendar/event?eid=NGVhaHM5Z2hraHJ2a2xkNzJob2d1OXBoM2VfMjAyMDA1MTlUMTQwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20\",\n    \"created\": \"2020-05-19T19:17:46.000Z\",\n    \"updated\": \"2020-05-27T12:01:32.356Z\",\n    \"summary\": \"Learn JavaScript\",\n    \"description\": \"Have you wondered how you can ask Google to show you the list of the top ten must-see places in London? And how Google presents you the list? How can you submit the details of an application? Well, JavaScript is doing these. :) \\n\\nJavascript offers interactivity to a dull, static website. Come, learn JavaScript with us and make those beautiful websites.\",\n    \"location\": \"London, UK\",\n    \"creator\": {\n     \"email\": \"fullstackwebdev@careerfoundry.com\",\n     \"self\": true\n    },\n    \"organizer\": {\n     \"email\": \"fullstackwebdev@careerfoundry.com\",\n     \"self\": true\n    },\n    \"start\": {\n     \"dateTime\": \"2020-05-19T16:00:00+02:00\",\n     \"timeZone\": \"Europe/Berlin\"\n    },\n    \"end\": {\n     \"dateTime\": \"2020-05-19T17:00:00+02:00\",\n     \"timeZone\": \"Europe/Berlin\"\n    },\n    \"recurringEventId\": \"4eahs9ghkhrvkld72hogu9ph3e\",\n    \"originalStartTime\": {\n     \"dateTime\": \"2020-05-19T16:00:00+02:00\",\n     \"timeZone\": \"Europe/Berlin\"\n    },\n    \"iCalUID\": \"4eahs9ghkhrvkld72hogu9ph3e@google.com\",\n    \"sequence\": 0,\n    \"reminders\": {\n     \"useDefault\": true\n    },\n    \"eventType\": \"default\"\n   },\n   {\n    \"kind\": \"calendar#event\",\n    \"etag\": \"\\\"3181159875584000\\\"\",\n    \"id\": \"3qtd6uscq4tsi6gc7nmmtpqlct_20200520T120000Z\",\n    \"status\": \"confirmed\",\n    \"htmlLink\": \"https://www.google.com/calendar/event?eid=M3F0ZDZ1c2NxNHRzaTZnYzdubW10cHFsY3RfMjAyMDA1MjBUMTIwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20\",\n    \"created\": \"2020-05-19T19:14:30.000Z\",\n    \"updated\": \"2020-05-27T11:45:37.792Z\",\n    \"summary\": \"React is Fun\",\n    \"description\": \"Love HTML, CSS, and JS? Want to become a cool front-end developer? \\n\\nReact is one of the most popular front-end frameworks. There is a huge number of job openings for React developers in most cities. \\n\\nJoin us in our free React training sessions and give your career a new direction. \",\n    \"location\": \"Berlin, Germany\",\n    \"creator\": {\n     \"email\": \"fullstackwebdev@careerfoundry.com\",\n     \"self\": true\n    },\n    \"organizer\": {\n     \"email\": \"fullstackwebdev@careerfoundry.com\",\n     \"self\": true\n    },\n    \"start\": {\n     \"dateTime\": \"2020-05-20T14:00:00+02:00\",\n     \"timeZone\": \"Europe/Berlin\"\n    },\n    \"end\": {\n     \"dateTime\": \"2020-05-20T15:00:00+02:00\",\n     \"timeZone\": \"Europe/Berlin\"\n    },\n    \"recurringEventId\": \"3qtd6uscq4tsi6gc7nmmtpqlct\",\n    \"originalStartTime\": {\n     \"dateTime\": \"2020-05-20T14:00:00+02:00\",\n     \"timeZone\": \"Europe/Berlin\"\n    },\n    \"iCalUID\": \"3qtd6uscq4tsi6gc7nmmtpqlct@google.com\",\n    \"sequence\": 0,\n    \"reminders\": {\n     \"useDefault\": true\n    },\n    \"eventType\": \"default\"\n   },\n \n];\nexport {mockData};","/**\n *\n * @param {*} events:\n * The following function should be in the “api.js” file.\n * This function takes an events array, then uses map to create a new array with only locations.\n * It will also remove all duplicates by creating another new array using the spread operator and spreading a Set.\n * The Set will remove all duplicates from the array.\n */\n\n import { mockData } from './mock-data';\n import axios from 'axios';\n import NProgress from 'nprogress';\n\n export const getAccessToken = async () => {\n  const accessToken = localStorage.getItem('access_token');\n  const tokenCheck = accessToken && (await checkToken(accessToken));\n\n  if (!accessToken || tokenCheck.error) {\n    await localStorage.removeItem(\"access_token\");\n    const searchParams = new URLSearchParams(window.location.search);\n    const code = await searchParams.get(\"code\");\n    if (!code) {\n      const results = await axios.get(\n        \"https://jhxfumgqlf.execute-api.eu-central-1.amazonaws.com/dev/api/get-auth-url\"\n      );\n      const { authUrl } = results.data;\n      return (window.location.href = authUrl);\n    }\n    return code && getToken(code);\n  }\n  return accessToken;\n}\nconst getToken = async (code) => {\n  const encodeCode = encodeURIComponent(code);\n  const { access_token } = await fetch(\n    'https://jhxfumgqlf.execute-api.eu-central-1.amazonaws.com/dev/api/token/' + encodeCode\n  )\n    .then((res) => {\n      return res.json();\n    })\n    .catch((error) => error);\n\n  access_token && localStorage.setItem(\"access_token\", access_token);\n\n  return access_token;\n};\n export const extractLocations = (events) => {\n  var extractLocations = events.map((event) => event.location);\n  var locations = [...new Set(extractLocations)];\n  return locations;\n};\nconst checkToken = async (accessToken) => {\n  const result = await fetch(\n    `https://www.googleapis.com/oauth2/v1/tokeninfo?access_token=${accessToken}`\n  )\n    .then((res) => res.json())\n    .catch((error) => error.json());\n\n  return result;\n};\nexport const getEvents = async () => {\n  NProgress.start();\n\n  if (window.location.href.startsWith(\"http://localhost\")) {\n    NProgress.done();\n    return mockData;\n  }\n\n\n  const token = await getAccessToken();\n  const removeQuery = () => {\n    if (window.history.pushState && window.location.pathname) {\n      var newurl =\n        window.location.protocol +\n        \"//\" +\n        window.location.host +\n        window.location.pathname;\n      window.history.pushState(\"\", \"\", newurl);\n    } else {\n      newurl = window.location.protocol + \"//\" + window.location.host;\n      window.history.pushState(\"\", \"\", newurl);\n    }\n  };\n  if (token) {\n    removeQuery();\n    const url = 'https://jhxfumgqlf.execute-api.eu-central-1.amazonaws.com/dev/api/get-events/' + token;\n    const result = await axios.get(url);\n    if (result.data) {\n      var locations = extractLocations(result.data.events);\n      localStorage.setItem(\"lastEvents\", JSON.stringify(result.data));\n      localStorage.setItem(\"locations\", JSON.stringify(locations));\n    }\n    NProgress.done();\n    return result.data.events;\n  }\n};","// src/App.js\n\nimport React, { Component } from 'react';\nimport EventList from './EventList';\nimport CitySearch from './CitySearch';\nimport NumberOfEvents from './NumberOfEvents';\nimport { getEvents, extractLocations } from './api';\nimport './nprogress.css';\nimport {Container, Row} from 'react-bootstrap'\nimport './App.scss';\n\nclass App extends Component {\n  state = {\n    events: [],\n    locations: []\n  }\n  updateEvents = (location) => {\n    getEvents().then((events) => {\n      const locationEvents = (location === 'all') ?\n      events :\n      events.filter((event) => event.location === location);\n      this.setState({\n        events: locationEvents\n      });\n    });\n  }\n  componentDidMount() {\n    this.mounted = true;\n    getEvents().then((events) => {\n      if (this.mounted) {\n        this.setState({ events, locations: extractLocations(events) });\n      }\n    });\n  }\n\n  componentWillUnmount(){\n    this.mounted = false;\n  }\n  render() {\n    return (\n      <div className=\"App\">\n        <Container>\n          <Row>\n        <CitySearch locations={this.state.locations} updateEvents={this.updateEvents} />\n        <NumberOfEvents />\n        </Row>\n        <Row>\n        <EventList events={this.state.events}/>\n        </Row>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorkerRegistration.unregister();\n\nreportWebVitals();\n"],"sourceRoot":""}